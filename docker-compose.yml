services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thalassa-app
    ports:
      - "8000:8000"
    volumes:
      - upload-data:/app/uploads
      - results-data:/app/results
      - logs-data:/app/logs
    environment:
      - APP_NAME=Project Thalassa
      - APP_VERSION=1.0.0
      - DEBUG=false
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - thalassa-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Script runner service for batch operations
  scripts:
    extends: app
    profiles: ["scripts"]
    container_name: thalassa-scripts
    ports: []  # Remove port mapping for script runner
    restart: "no"  # Don't restart script containers
    command: ["/app/entrypoint.sh", "python", "scripts/generate_results.py"]
    healthcheck:
      disable: true  # No health check for script runners

  # Optional: Add nginx for production-like setup (disabled)
  # nginx:
  #   image: nginx:alpine
  #   container_name: thalassa-nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./app/static:/usr/share/nginx/html/static:ro
  #   depends_on:
  #     - app
  #   networks:
  #     - thalassa-network
  #   restart: unless-stopped

networks:
  thalassa-network:
    driver: bridge

volumes:
  upload-data:
    driver: local
  results-data:
    driver: local
  logs-data:
    driver: local

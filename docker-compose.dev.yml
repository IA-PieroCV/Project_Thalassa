# Usage: docker-compose -f docker-compose.dev.yml up

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Use development stage if multi-stage
    container_name: thalassa-dev
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot reloading
      - ./app:/app/app
      - ./tests:/app/tests
      - ./uploads:/app/uploads
      - ./results:/app/results
      - ./logs:/app/logs
    environment:
      - APP_NAME=Project Thalassa (Dev)
      - APP_VERSION=1.0.0-dev
      - DEBUG=true
      - ENVIRONMENT=development
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    command: ["pixi", "run", "dev"]  # Use pixi dev command
    networks:
      - thalassa-dev-network
    stdin_open: true
    tty: true

  # Development database (if needed in future)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: thalassa-db
  #   environment:
  #     - POSTGRES_DB=thalassa_dev
  #     - POSTGRES_USER=thalassa
  #     - POSTGRES_PASSWORD=development
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - thalassa-dev-network

  # Development tools
  adminer:
    image: adminer
    container_name: thalassa-adminer
    ports:
      - "8080:8080"
    networks:
      - thalassa-dev-network
    depends_on:
      - app

networks:
  thalassa-dev-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
